/////////////// [FORMS] ///////////////

@use '../config';

// Form Container
//
.vds-form-container {
  border: 1px solid var(--set-color-form-base-tint);
  background: white;
  padding: 1em;
  width: 100%;
  margin: 0 auto;
}

// Inputs
// 
.vds-input-container {
  margin: 0;
  display: inline-block;
  position: relative;
  vertical-align: middle;
  width: 100%;
  
  .vds-input {
    height: 50px;
    order: 2;
    // display: block;
    margin-top: 0;
    background: var(--input-bg);
    padding: 18px 10px 2px 10px;
    line-height: 26px;
    border-width: 0 0 2px 0;
    border-radius: 4px 4px 0 0;
    border-style: solid;
    border-color: var(--input-border-color);
    width: 100%;
    box-sizing: border-box;
    font-size: 100%;
    vertical-align: baseline;
    
    &::placeholder {
      opacity: 0;
      color: var(--placeholder-color);
    }
  }
  
  .vds-label {
    
    position: absolute;
    bottom: 100%;
    left: 0;
    right: auto;
    
    color: var(--form-color-base);
    background: transparent;
    
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    -webkit-box-ordinal-group: 1;
    order: 1;
    pointer-events: none;
    -webkit-font-smoothing: antialiased;
    padding-left: 3px;
    padding-right: 0;
    z-index: 1;
    transform: translate3d(10px,38px,0) scale(1);
    transition: transform .4s cubic-bezier(0.25,0.8,0.25,1);
    max-width: 100%;
    transform-origin: left top;
  }
    
  .vds-validation-error {
    display: none;
    color: var(--form-color-error);
    font-style: italic;
  }
  
  input {
    
    // Disabled
    //     
    &:disabled {
      border-color: var(--form-color-base-shade);
    }
    
    &:disabled + .vds-label {
      color: var(--form-color-base-shade);
    }
    
    // Focused     
    //     
    &:focus {
      background: var(--form-color-base-light);
      outline: none;
      border-color: var(--form-color-focus);
      border-width: 0 0 2px 0;
      
      &::placeholder {
        opacity: 1;
      }
    }
    
    // input must have "required" for valid to work
    // and keep the label up top    
    &:focus + .vds-label,
    &:valid + .vds-label {
      color: var(--form-color-focus) !important;
      transform: translate3d(8px,30px,0) scale(0.75);
    }
    
    // On error   
    //     
    &.vds-error {
      border-color: var(--form-color-error);
      
      &:focus,
      &:valid {
        outline-color: var(--form-color-error-tint);
      }
      
      &+ .vds-label {
        color: var(--form-color-error) !important;
      }

      &~.vds-validation-error {
        display: inline-block;
      }
    }
  }

}

// Selection
// 
.vds-select-container {
  @extend .vds-input-container;
  
  .vds-select {
    @extend .vds-input;
  }
  
  select {
    
    // Disabled
    //     
    &:disabled {
      border-color: rgba(0,0,0,0.2);
    }
    
    &:disabled + .vds-label {
      color: rgba(0,0,0,0.4);
    }
    
    // Focused     
    //     
    &:focus {
      @extend input, :focus;
    }
    
    // input must have "required" for valid to work
    // and keep the label up top    
    &:focus + .vds-label,
    &:valid + .vds-label {
      color: var(--form-color-focus) !important;
      transform: translate3d(8px,30px,0) scale(0.75);
    }
    
    // On error   
    //     
    &.vds-error {
      @extend input, .vds-error;
      
      &+ .vds-label {
        color: var(--form-color-error) !important;
      }
    }
  }
  
}

// Textarea
// 
.vds-textarea-container {
  @extend .vds-input-container;
  
  .vds-label {
    padding-left: 10px;
  }
  
  .vds-textarea {
    @extend .vds-input;
    height: auto;
    border: none;
    border-bottom: 2px solid var(--form-color-base);
    padding-left: 10px;
  }
  
  textarea {
    overflow: auto;
    resize: vertical;
    
    // Disabled
    //     
    &:disabled {
      border-color: rgba(0,0,0,0.2);
    }
    
    &:disabled + .vds-label {
      color: rgba(0,0,0,0.4);
    }
    
    // Focused     
    //     
    &:focus {
      @extend input, :focus;
      border-bottom: 2px solid var(--form-color-focus);
    }
    
    // input must have "required" for valid to work
    // and keep the label up top    
    &:focus + .vds-label,
    &:valid + .vds-label {
      color: var(--form-color-focus) !important;
      transform: translate3d(2px,30px,0) scale(0.75);
    }
    
    // On error   
    //     
    &.vds-error {
      @extend input, .vds-error;
      border-bottom: 2px solid var(--form-color-error);
      
      &:focus {
        @extend input, :focus;
        border-bottom: 2px solid var(--form-color-error);
      }
      
      &+ .vds-label {
        color: var(--form-color-error) !important;
      }
    }
  }
  
}

// Fieldset and Legend
// 
.vds-fieldset {
  border: 1px solid var(--form-color-base-light);
  padding: 1em 0.5em 0 0.5em;
  margin: 0;
}

.vds-legend {
  border: 1px solid var(--form-color-base-light);
  color: var(--form-color-base);
  padding: 0.25em 0.5em;
  font-size: 0.8em;
}

// Checkbox and Radio
// 
.vds-checkbox-container,
.vds-radio-container {
  @extend .vds-input-container;
  padding-bottom: 0.5em;
  
  .vds-checkbox,
  .vds-radio {
    z-index: -1;
    cursor: pointer;
    position: absolute;
    top: 0;
    left: 0;
    opacity: 0 !important;
    outline: 0;
    z-index: 3;
    width: 18px;
    height: 18px;
  }
   
  .vds-label {
    position: relative;
    padding-left: 1.85714em;
    
    &:before {
      position: absolute;
      top: 0;
      left: 0;
      width: 17px;
      height: 17px;
      content: '';
      background: white;
      border-radius: .25em;
      border: 1px solid var(--form-color-base-light);
    }
    
    &:after {
      content: '\2713';
      font-weight: 700;
      position: absolute;
      font-size: 14rem;
      top: 0;
      left: 0;
      width: 17px;
      height: 17px;
      text-align: center;
      color: var(--form-color-focus);
      transform: scale(0);
    }
  }
  
  input[type=checkbox]:checked + label:before,
  input[type=radio]:checked + label:before {
    background: var(--form-color-base-tint);
  }
  
  input[type=checkbox]:checked + label:after,
  input[type=radio]:checked + label:after {
    animation: radioAndCheckboxAnimation .25s;
    transform: scale(1);
  }
  
  @keyframes radioAndCheckboxAnimation {
    0% {
      transform: scale(0);
    }

    50% {
      transform: scale(1.5);
    }

    100% {
      transform: scale(1);
    }
  }
    
  input { 
    &:focus + .vds-label,
    &:valid + .vds-label {
      color: var(--form-color-focus) !important;
      transform: translate3d(0,0,0) scale(1);
    }
  }
  
}

.vds-radio-container {
  .vds-label {
    &:before {
      border-radius: 50%;
    }
    
    &:after {
      content: '\26AB';
      font-size: 14rem;
      top: -2rem;
      left: 0;
      width: 17px;
      height: 17px;
    }
  }   
}

.vds-input-group {
  display: flex;
  
  .vds-input-container {
    &:first-child {
      input {
        border-radius: 4px 0 0 0;
      }
    }
    
    &:last-child {
      input {
        border-radius: 0 4px 0 0;
      }
    }
  }
}

// Deal with IE
//
/* IE Edge 12+ CSS styles go here */
@supports (-ms-accelerator:true) { 
  .vds-input::placeholder {
    color: transparent;
  }
}
/* IE10+ CSS styles go here */
:-ms-input-placeholder { /* Internet Explorer 10+ */
  color: transparent;
}

// [data-field],
// [data-label],
// [data-input] {
//   display: block;
// }

// [data-label] {
//   @include config.font-family('alt');
//   font-weight: bold;
// }

// [data-field] {
//   margin-bottom: var(--field-margin, var(--shim));
// }

// input,
// select {
//   width: 100%;
//   max-width: 100%;
// }

// [data-input] {
//   background-color: var(--input-bg, var(--bg));
//   border: thin solid var(--input-border, var(--border));
//   color: var(--input-color, var(--text-light));
//   font: inherit;
// }

// [data-input~='text'] {
//   border-radius: var(--border-radius) 0;
//   font-size: var(--font-small);
//   padding: var(--field-padding, var(--quarter-shim) var(--half-shim));
//   width: var(--field-width, 100%);

//   &:focus {
//     --input-bg: var(--bg);
//     --input-border: var(--action);
//     --input-color: var(--text);
//   }
// }

// [data-input~='area'] {
//   min-height: calc(var(--gutter) * 4);
// }

// ::placeholder {
//   color: var(--text-light);
// }